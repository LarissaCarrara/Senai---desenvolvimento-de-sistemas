Crie uma variável de ambiente para armazenar seu ID do projeto:
export PROJECT_ID=$(gcloud config get-value project)

Crie uma variável de ambiente para armazenar sua Zona:
export ZONE=$(gcloud config get-value compute/zone)

Criando uma instância
gcloud compute instances create Instance name --machine-type f1-micro --zone $ZONE

tarefa 2

Para criar um cluster, execute o comando abaixo, substituindo [CLUSTER-NAME] pelo nome que você escolher (por exemplo, my-cluster).
gcloud container clusters create [CLUSTER-NAME]

Para criar uma nova implantação hello-server da imagem do contêiner hello-app, execute este comando kubectl create:
kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:2.0

Para criar um serviço do Kubernetes, um recurso que permite expor o aplicativo ao tráfego externo, execute o comando kubectl expose a seguir:
kubectl expose deployment hello-app --type=LoadBalancer --port ?


tarefa 3
Crie primeiro o modelo do balanceador de carga:
gcloud compute instance-templates create lb-backend-template \
   --region=us-west4 \
   --network=default \
   --subnet=default \
   --tags=allow-health-check \
   --machine-type=e2-medium \
   --image-family=debian-11 \
   --image-project=debian-cloud \
   --metadata=startup-script='#!/bin/bash
     apt-get update
     apt-get install -y nginx
     service nginx start
     sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html
     EOF

Adicione um pool de destino na mesma região de suas instâncias. Execute o comando a seguir para criar o pool de destino e usar a verificação de integridade necessária para o funcionamento do serviço:
  gcloud compute target-pools create www-pool \
    --region us-west4 --http-health-check basic-check
